user www-data;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
worker_processes 2;

events {
    worker_connections 1000;
}

http {
    # HTTP 1.1 support
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    server {
        # This is just an invalid value which will never trigger on a real hostname.
        server_name _;
        listen 80;
        access_log /var/log/nginx/access.log;
        return 503;
    }

    # Pass microsites through to microsites server, regardless of port.
    server {
        server_name *.jobs;
        listen 443;
        listen 80;

        access_log /var/log/nginx/access.log;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate /etc/nginx/certs/jobs.crt;
        ssl_certificate_key /etc/nginx/certs/jobs.key;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header X-Handled-By $upstream_addr;

        set $django_microsites http://127.0.0.1:8001;
        location / {
            proxy_pass $django_microsites;
        }
    }

    # Redirect http to https on secure only.
    server {
        server_name secure.my.jobs;
        listen 80;
        access_log /var/log/nginx/access.log;
        return 301 https://$host$request_uri;
    }

    # Pass secure traffic through to secure server. https only.
    server {
        server_name secure.my.jobs;

        listen 443;
        listen 80;

        access_log /var/log/nginx/access.log;

        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate /etc/nginx/certs/jobs.crt;
        ssl_certificate_key /etc/nginx/certs/jobs.key;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header X-Handled-By $upstream_addr;

        set $django_secure http://127.0.0.1:8000;
        location / {
            proxy_pass $django_secure;
        }
    }

    # Pass redirect through to redirect server, regardless of port.
    server {
        server_name my.jobs;
        listen 443;
        listen 80;

        access_log /var/log/nginx/access.log;

        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate /etc/nginx/certs/jobs.crt;
        ssl_certificate_key /etc/nginx/certs/jobs.key;

        add_header Strict-Transport-Security "max-age=31536000";

        set $django_redirect http://127.0.0.1:8002;
        location / {
            proxy_pass $django_redirect;
        }
    }
}
